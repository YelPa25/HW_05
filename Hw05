#include <SFML/Graphics.hpp>
#include <vector>

int main()
{
    sf::RenderWindow window(sf::VideoMode(960, 768), "Labirynt");

    // Load background
    sf::Texture grassTexture;
    grassTexture.loadFromFile("grass.png");

    sf::Sprite background(grassTexture);
    background.setScale(
        (float)window.getSize().x / grassTexture.getSize().x,
        (float)window.getSize().y / grassTexture.getSize().y
    );

    // Load wall texture
    sf::Texture wallTexture;
    wallTexture.loadFromFile("wall.png");

    std::vector<sf::Sprite> walls;
    std::vector<sf::Vector2f> wallPositions = {
        // Left column
        {64, 64}, {64, 128}, {64, 192},
        // Middle vertical
        {192, 128}, {192, 192}, {192, 256},
        // Top middle horizontal
        {256, 64}, {320, 64}, {384, 64},
        // Right vertical
        {512, 128}, {512, 192}, {512, 256},
        // Right horizontal (connected to vertical)
        {448, 256}
    };

    for (auto pos : wallPositions) {
        sf::Sprite wall(wallTexture);
        wall.setPosition(pos);
        walls.push_back(wall);
    }

    // Load player
    sf::Texture playerTexture;
    playerTexture.loadFromFile("guy.png");

    sf::Sprite player(playerTexture);
    player.setPosition(128, 640);  // Start from bottom left
    player.setScale(0.7f, 0.7f);

    sf::Clock clock;
    float speed = 100.0f;

    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        float dt = clock.restart().asSeconds();
        sf::Vector2f movement(0.f, 0.f);

        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left))
            movement.x -= speed * dt;
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right))
            movement.x += speed * dt;
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Up))
            movement.y -= speed * dt;
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Down))
            movement.y += speed * dt;

        sf::Vector2f oldPos = player.getPosition();
        player.move(movement);

        for (auto& wall : walls) {
            if (player.getGlobalBounds().intersects(wall.getGlobalBounds())) {
                player.setPosition(oldPos); // revert move
                break;
            }
        }

        window.clear();
        window.draw(background);
        for (auto& wall : walls)
            window.draw(wall);
        window.draw(player);
        window.display();
    }

    return 0;
}
